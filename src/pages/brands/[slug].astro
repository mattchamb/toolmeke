---
import Layout from '../../layouts/Layout.astro';
import ToolCard from '../../components/ToolCard.astro';
import { getEntry } from 'astro:content';

export async function getStaticPaths() {
  const brandsData = await getEntry('brands', 'brands');
  if (!brandsData) {
    throw new Error('Brands data not found');
  }
  const brands = brandsData.data;

  return brands.map((brand) => ({
    params: { slug: brand.slug },
    props: { brand }
  }));
}

const { brand } = Astro.props;

// Load all tools and filter by brand
const toolsData = await getEntry('tools', 'tools');
if (!toolsData) {
  throw new Error('Tools data not found');
}
const allTools = toolsData.data;
const brandTools = allTools.filter(tool => tool.toolBrand.toLowerCase() === brand.name.toLowerCase());

// Transform tools data to match ToolCard interface
const tools = brandTools.map(tool => ({
  modelNumber: tool.modelNumber,
  name: tool.name,
  categories: tool.categories,
  priceRange: tool.priceRange.min !== null && tool.priceRange.max !== null ? {
    min: tool.priceRange.min,
    max: tool.priceRange.max
  } : undefined,
  storeCount: tool.storeCount,
  stores: tool.stores.map(store => ({
    store: store.store,
    effectivePrice: store.effectivePrice || 0,
    url: store.url
  }))
}));

const title = `${brand.name} Tools - ToolMeke`;
const description = `Compare prices for ${brand.name} tools across New Zealand hardware stores`;
---

<Layout title={title} description={description}>
  <section class="section">
    <div class="container">
      <div class="mb-6">
        <h1 class="title is-1 has-text-dark">{brand.name} Tools</h1>
        <p class="subtitle is-4 has-text-grey mb-4">
          Compare prices for {brand.name} tools across New Zealand hardware stores
        </p>
        <div class="is-flex is-align-items-center mb-4">
          <span class="is-size-6 has-text-weight-semibold has-text-dark mr-2">Total Tools:</span>
          <span class="is-size-6 has-text-grey">{brand.toolCount}</span>
        </div>
      </div>

      {tools.length > 0 ? (
        <div class="columns is-multiline">
          {tools.slice(0, 50).map((tool) => (
            <div class="column is-12-mobile is-6-tablet is-4-desktop">
              <ToolCard tool={tool} />
            </div>
          ))}
        </div>
      ) : (
        <div class="has-text-centered py-6">
          <p class="subtitle is-4 has-text-grey">No tools data available for {brand.name} at the moment.</p>
          <p class="is-size-5 has-text-grey">Please check back later for updated pricing information.</p>
        </div>
      )}

      {tools.length > 50 && (
        <div class="has-text-centered mt-5">
          <p class="is-size-5 has-text-grey">
            Showing first 50 tools. Total available: {brand.toolCount}
          </p>
        </div>
      )}
    </div>
  </section>
</Layout>
